version: '3.7'

services:
  db:
    image: postgres:alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${SQL_DATABASE_NAME}
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
    restart: on-failure:3

  pgbouncer:
    depends_on:
      - db
    restart: on-failure:3
    image: pgbouncer/pgbouncer
    environment:
      - DATABASES_HOST=db
      - DATABASES_DBNAME=${SQL_DATABASE_NAME}
      - DATABASE_USER=${SQL_USER}
      - DATABASE_PASSWORD=${SQL_PASSWORD}
      - PGBOUNCER_ADMIN_USERS=${SQL_USER}
      - PGBOUNCER_AUTH_TYPE=md5
    ports:
      - 6432:6432

  nginx:
    build: ./nginx
    ports:
      - 1337:80
      - 5555:5555
    depends_on:
      - web
    restart: on-failure:3

  web:
    container_name: dev-web-tochka
    build:
      context: ./
      dockerfile: Dockerfile.prod
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - .:/usr/src/tochka-proj
    expose:
      - 8000
    depends_on:
      - db
    restart: on-failure:3

  redis:
    image: redis:alpine
    restart: on-failure:3

  celery:
    build: .
    command: celery -A config worker -l info
    volumes:
      - .:/usr/src/tochka-proj/
    depends_on:
      - db
      - redis
    restart: on-failure:3

  celery-beat:
    build: .
    command: celery -A config beat -l info
    volumes:
      - .:/usr/src/tochka-proj/
    depends_on:
      - db
      - redis
    restart: on-failure:3

volumes:
  postgres_data:
# TIP: docker-compose automatically adds folder name as prefix
# to volumes' names. It could cause problems if you change folder name
# to control this you can run docker-compose with -p flag
# example: docker-compose -p "your_prefix" up